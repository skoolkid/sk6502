; Copyright 2021 Richard Dymond (rjdymond@gmail.com)

[Config]
RefFiles=as.ref;bugs.ref;changelog.ref;facts.ref;glossary.ref;lessons.ref;pokes.ref

[Game]
Address=${address:04X}
AddressAnchor={address:04X}
Game=Skool Daze
Length=${size:02X}
Logo=#UDGARRAY8,$14;$5920-$59D8-8({ImagePath}/logo)
StyleSheet=skoolkit.css;theme.css
LinkInternalOperands=1
LinkOperands=BCC,BCS,BEQ,BMI,BNE,BPL,BVC,BVS,JMP,JSR,.WORD
Release=The complete Skool Daze C64 disassembly 20210126
Created=Created using <a href="https://skoolkit.ca">SkoolKit</a> #VERSION and <a href="https://github.com/skoolkid/sk6502">sk6502</a>.
Copyright=&#169; 1985 Microsphere Computer Services Ltd. &#169; 2021 Richard Dymond.

[EntryGroups]
BlackboardBuffer=$19,$1A,$DF
CharacterBuffer=$26,$29,$39,$3B,$3D,$3F,$A6,$A8,$A9,$AA,$AC,$AE,$B0,$B2,$B3,$B4,$B5,$FB,$FF

[MemoryMap:MemoryMap]
PageByteColumns=0

[MemoryMap:DataMap]
PageByteColumns=0

[MemoryMap:UnusedMap]
PageByteColumns=0

[MemoryMap:CharacterBuffer]
Intro=#INCLUDE(CharacterBufferIntro)
EntryDescriptions=1
Includes=CharacterBuffer
LengthColumn=1

[CharacterBufferIntro]
Whenever a character's state needs to be examined or updated, his character
buffer is copied to the addresses in page 0 shown below by the routine at
#A$3279. Afterwards, the character's buffer is restored from page 0 by the
routine at #A$33BF.

[MemoryMap:BlackboardBuffer]
Intro=#INCLUDE(BlackboardBufferIntro)
EntryDescriptions=1
Includes=BlackboardBuffer
LengthColumn=1

[BlackboardBufferIntro]
Whenever a blackboard's state needs to be examined or updated, its buffer is
copied to the addresses in page 0 shown below by the routine at #A$1421.
Afterwards, the blackboard's buffer is restored from page 0 by the routine at
#A$1445.

[Index:Graphics:Graphics]
PlayArea
InitialAnimatoryStates
AnimatoryStates

[Index:DataTables:Data tables and buffers]
GameStatusBuffer
CharacterBuffer
BlackboardBuffer
TuneBuffer
MainTimetable
LessonIndex
CommandLists

[Links]
CommandLists=Command lists
MainTimetable=Main timetable

[PageHeaders]
Asm-BlackboardBuffer=Blackboard buffer
Asm-CharacterBuffer=Character buffer
GameIndex=The complete<>C64 disassembly

[Titles]
AnimatoryStates=Animatory states
Asm-BlackboardBuffer=Blackboard buffer entry at {entry[address]}
Asm-CharacterBuffer=Character buffer entry at {entry[address]}
BlackboardBuffer=Blackboard buffer
CharacterBuffer=Character buffer
InitialAnimatoryStates=Initial animatory states and locations
PlayArea=Play area
TuneBuffer=Tune buffer

[Paths]
AnimatoryStates=graphics/as.html
BlackboardBuffer=buffers/bbuffer.html
CharacterBuffer=buffers/cbuffer.html
CodeFiles={address:04X}.html
InitialAnimatoryStates=graphics/asstart.html
LessonIndex=lessons/index.html
LessonE0=lessons/E0.html
LessonE1=lessons/E1.html
LessonE2=lessons/E2.html
LessonE3=lessons/E3.html
LessonE4=lessons/E4.html
LessonE5=lessons/E5.html
LessonE6=lessons/E6.html
LessonE7=lessons/E7.html
LessonE8=lessons/E8.html
LessonE9=lessons/E9.html
LessonEA=lessons/EA.html
LessonEB=lessons/EB.html
LessonEC=lessons/EC.html
LessonED=lessons/ED.html
LessonEE=lessons/EE.html
LessonEF=lessons/EF.html
LessonF0=lessons/F0.html
LessonF1=lessons/F1.html
LessonF2=lessons/F2.html
LessonF3=lessons/F3.html
LessonF4=lessons/F4.html
LessonF5=lessons/F5.html
LessonF6=lessons/F6.html
LessonF7=lessons/F7.html
LessonF8=lessons/F8.html
LessonF9=lessons/F9.html
LessonFA=lessons/FA.html
LessonFB=lessons/FB.html
LessonFC=lessons/FC.html
LessonFD=lessons/FD.html
LessonFE=lessons/FE.html
LessonFF=lessons/FF.html
PlayArea=graphics/playarea.html
UDGFilename={addr:04x}

[Page:MainTimetable]
Content=asm/5D00.html

[Page:CommandLists]
Content=asm/4480.html

[Page:TuneBuffer]
Content=asm/BBB4.html

[xBarFrame]
#PUSHS
#POKES0,48;1,32;2,56;3,32;192,1,48,2;193,7,48,2
#FOR(16,88,8)(x,#POKES(x/4,48+x/10);(x/4+1,48+x%10))
#UDGARRAY96;$46F8x96@192-287(*xbar)
#FOR(0,190,2)(i,#WRITE(i,2,i*32,0)(xbar))
#POPS

[Page:PlayArea]
PageContent=#INCLUDE(PlayAreaPage)
xBarFrame=#INCLUDE(xBarFrame)

[PlayAreaPage]
#UDGARRAY*xbar(xbar)
#SKOOLIMG0,0,96,21(skool)
#UDGARRAY*xbar(xbar)

[Page:InitialAnimatoryStates]
PageContent=#INCLUDE(InitialAnimatoryStates)
xBarFrame=#INCLUDE(xBarFrame)

[InitialAnimatoryStates]
#UDGARRAY*xbar(xbar)
#PUSHS
#FOR(0,20)(c,#POKES((c+$78)*256+$60,#PEEK($4900+c)))
#FOR(0,20)(c,#POKES((c+$78)*256+$61,#PEEK($4A00+c)))
#FOR(0,20)(c,#POKES((c+$78)*256+$62,17))
#SDIMG0,0,96,21,10,72,17,20(initial_as)
#POPS
#UDGARRAY*xbar(xbar)
